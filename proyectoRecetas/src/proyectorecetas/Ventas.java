/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectorecetas;

import static java.awt.image.ImageObserver.WIDTH;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ClaudiaFabiola
 */
public class Ventas extends javax.swing.JFrame {

    /**
     * Creates new form Ventas
     */
    int idVenta,folioVenta;
    DefaultTableModel valoresTabla;
    DefaultTableModel valoresReceta;
    
    public Ventas() {
        initComponents();
        
        consultaRecetas("");
        //listaIngredientes();
        //operacionPrecioTotal();
        //operacionPorcion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_consumo = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_recetas = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txt_filtro = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnAgregaReceta = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txt_porciones = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        btnNuevaVenta = new javax.swing.JButton();
        txt_folio = new javax.swing.JTextField();
        txt_montoTotal = new javax.swing.JTextField();
        txt_fecha = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(650, 400));

        jLabel3.setText("Información de Venta #");

        jLabel4.setText("Consumo");

        tabla_consumo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Platillo", "Precio", "Cantidad", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_consumo.setMaximumSize(new java.awt.Dimension(300, 64));
        tabla_consumo.setName("tabla_consumo"); // NOI18N
        jScrollPane1.setViewportView(tabla_consumo);

        jLabel5.setText("Fecha:");

        tabla_recetas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Platillo", "Costo por porción"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_recetas.setName("tabla_recetas"); // NOI18N
        tabla_recetas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_recetasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_recetas);

        jLabel7.setText("Buscar:");

        txt_filtro.setMaximumSize(new java.awt.Dimension(100, 20));
        txt_filtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_filtroActionPerformed(evt);
            }
        });

        btnBuscar.setText("ir");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnAgregaReceta.setText("Agregar selección");
        btnAgregaReceta.setEnabled(false);
        btnAgregaReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregaRecetaActionPerformed(evt);
            }
        });

        jLabel8.setText("Porcciones:");

        txt_porciones.setText("1");
        txt_porciones.setMaximumSize(new java.awt.Dimension(50, 20));
        txt_porciones.setMinimumSize(new java.awt.Dimension(50, 20));
        txt_porciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_porcionesActionPerformed(evt);
            }
        });

        jLabel1.setText("Total venta ($):");

        jButton3.setText("Guardar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnNuevaVenta.setText("Nueva venta");
        btnNuevaVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaVentaActionPerformed(evt);
            }
        });

        txt_folio.setEditable(false);
        txt_folio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_folioActionPerformed(evt);
            }
        });

        txt_montoTotal.setEditable(false);

        txt_fecha.setText("2015-11-30");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_filtro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar)
                        .addGap(128, 128, 128)
                        .addComponent(jLabel4)
                        .addGap(260, 260, 260))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_folio, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnNuevaVenta))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_porciones, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(btnAgregaReceta))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_montoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(22, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(txt_folio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevaVenta)
                    .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(txt_filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jButton3)
                        .addComponent(txt_montoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txt_porciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAgregaReceta))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String filtro = txt_filtro.getText();
        consultaRecetas(filtro);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txt_filtroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_filtroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_filtroActionPerformed

    private void txt_porcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_porcionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_porcionesActionPerformed

    private void tabla_recetasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_recetasMouseClicked
        System.out.println("idVenta-->"+idVenta);
        if(idVenta!=0){
            btnAgregaReceta.setEnabled(true);
        }
    }//GEN-LAST:event_tabla_recetasMouseClicked

    private void btnAgregaRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregaRecetaActionPerformed
        //Limpiar tabla 
        if (tabla_consumo.getRowCount()>0){
            limpiaTablaConsumo();
        }
        //tomar la fila seleccionada
        int num=tabla_recetas.getSelectedRow();
        
        //convierte a string el contenido de la fila en la posicion seleccionada (que es num) de la columna 0
        String val = tabla_recetas.getModel().getValueAt(num, 0).toString();
        String montoPorsion;
        montoPorsion=tabla_recetas.getModel().getValueAt(num, 2).toString();
        double monto = Double.parseDouble(montoPorsion);
        
        //convierte en entero el valor del contenido en la columna de índice de la fila seleccionada
        int idReceta=Integer.parseInt(val);
        
        double cantidad= Double.parseDouble(txt_porciones.getText());
           
        agregarReceta(idVenta, idReceta, cantidad, monto);
        actualizaListaConsumo();
        operacionPrecioTotal();
        
    }//GEN-LAST:event_btnAgregaRecetaActionPerformed

    private void txt_folioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_folioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_folioActionPerformed

    private void btnNuevaVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaVentaActionPerformed
        System.out.println("running");
        //running
        
        String fecha = txt_fecha.getText();
        ultimaVentaCreada();
        
        try{
            ConectaBD c = new ConectaBD(1);
            int nueVenta;
            folioVenta++;
            txt_folio.setText(""+folioVenta);
            System.out.println("Fecha --> "+fecha);
            String consulta="INSERT INTO `ventas` (`idVenta`, `folio`, `fecha`, `montoTotal`) VALUES (NULL, '"+folioVenta+"', '"+fecha+"', '0');";
            System.out.println(consulta);
            
            Statement sentencia=c.conexion.createStatement();
            nueVenta=sentencia.executeUpdate(consulta);
            System.out.println("Registrando nueva incorporación.");
            System.out.println(consulta);
        }catch(SQLException ex){
            txt_fecha.setText("");
            JOptionPane.showMessageDialog(rootPane, "Fecha inválida. Escribe una fecha.", "Error.", WIDTH);
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_btnNuevaVentaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.out.println("running");
        //running
        try{
            ConectaBD c = new ConectaBD(1);
            int nueVenta;
            String consulta="UPDATE `ventas` SET `montoTotal` = '"+txt_montoTotal.getText()+"' WHERE `ventas`.`idVenta` = "+idVenta+";";
            System.out.println(consulta);
            
            Statement sentencia=c.conexion.createStatement();
            nueVenta=sentencia.executeUpdate(consulta);
            System.out.println("Registrando nueva incorporación.");
            System.out.println(consulta);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(rootPane, "Dato inválido. Seleccione otro valor, posiblemente dato duplicado. No se registró.", "Error.", WIDTH);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventas().setVisible(true);
            }
        });
    }
    
    private void consultaRecetas(String filtro){
        
        try{
            ConectaBD c=new ConectaBD(1);
            ResultSet resultadoProductos;
            ResultSetMetaData datosConsulta;
            String consulta="SELECT * FROM vwPrecioTotalRecetas WHERE receta LIKE '%"+filtro+"%'";
            Statement sentencia=c.conexion.createStatement();
            resultadoProductos=sentencia.executeQuery(consulta);
            
            datosConsulta=resultadoProductos.getMetaData();
            String[] filasConsulta=new String[datosConsulta.getColumnCount()];
            valoresTabla=(DefaultTableModel) tabla_recetas.getModel();
            
            while(resultadoProductos.next()){

                filasConsulta[0]=resultadoProductos.getString(1);
                filasConsulta[1]=resultadoProductos.getString(2);
                filasConsulta[2]=resultadoProductos.getString(3);

               valoresTabla.addRow(filasConsulta);
            }
            tabla_recetas.setModel(valoresTabla);
            
        }catch(Exception ex){
            System.out.println("No consulta productos: "+ ex.getMessage());
            ex.printStackTrace();
        }
    }
    
    void limpiaTablaConsumo(){
        if(valoresReceta.getRowCount()>0){
            for(int i=valoresReceta.getRowCount()-1;i>=0;i--){
            valoresReceta.removeRow(i);
        }
        tabla_consumo.setModel(valoresReceta);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregaReceta;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnNuevaVenta;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla_consumo;
    private javax.swing.JTable tabla_recetas;
    private javax.swing.JTextField txt_fecha;
    private javax.swing.JTextField txt_filtro;
    private javax.swing.JTextField txt_folio;
    private javax.swing.JTextField txt_montoTotal;
    private javax.swing.JTextField txt_porciones;
    // End of variables declaration//GEN-END:variables

    private void agregarReceta(int idVenta, int idReceta, double cantidad, double monto) {
        
        System.out.println("running");
        //running
        try{
            ConectaBD c = new ConectaBD(1);
            int insertaReceta;
            String consulta="INSERT INTO rel_ven_rec VALUES ('"+idVenta+"', '"+idReceta+"', "+cantidad+", "+monto+");";
            System.out.println(consulta);
            
            Statement sentencia=c.conexion.createStatement();
            insertaReceta=sentencia.executeUpdate(consulta);
            System.out.println("Registrando nueva incorporación.");
            System.out.println(consulta);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(rootPane, "Unidad Inválida. Seleccione otro valor, posiblemente dato duplicado. No se registró.", "Error.", WIDTH);
            ex.printStackTrace();
        }
    
    }

    private void actualizaListaConsumo() {
        
        try{
            ConectaBD c=new ConectaBD(1);
            ResultSet resultadoProductos;
            ResultSetMetaData datosConsulta;
            String consulta="SELECT * FROM `vwresumenventa` WHERE idVenta ="+idVenta;
            Statement sentencia=c.conexion.createStatement();
            resultadoProductos=sentencia.executeQuery(consulta);
            
            datosConsulta=resultadoProductos.getMetaData();
            String[] filasConsulta=new String[datosConsulta.getColumnCount()];
            valoresReceta=(DefaultTableModel) tabla_consumo.getModel();
            
            int cantidad = 0;
            double monto = 0;
            
            while(resultadoProductos.next()){

                filasConsulta[0]=resultadoProductos.getString(2);
                filasConsulta[1]=resultadoProductos.getString(3);
                cantidad = Integer.parseInt(resultadoProductos.getString(4));
                monto = Double.parseDouble(resultadoProductos.getString(5));
                
                filasConsulta[2]=cantidad+"";
                filasConsulta[3]=monto+"";
               valoresReceta.addRow(filasConsulta);
            }
            tabla_consumo.setModel(valoresReceta);
            
            
        }catch(Exception ex){
            System.out.println("No consulta recetas: "+ ex.getMessage());
            ex.printStackTrace();
        }
        
    }

    private void operacionPrecioTotal() {
        int rowCnt = tabla_consumo.getRowCount();
        double precTtl=0,prec=0;
        String val;
        
        for(int i=0;i<rowCnt;i++){
            val = tabla_consumo.getModel().getValueAt(i, 3).toString();
            prec= Double.parseDouble(val);
            System.out.println("precTtl= "+precTtl);
            System.out.println("prec= "+prec);
            System.out.println("");
            precTtl=precTtl+prec;
            System.out.println("precTtl= "+precTtl);
        }
        val=""+precTtl;
        System.out.println("precTtl= "+precTtl);
        txt_montoTotal.setText(val);
    }

    private void ultimaVentaCreada() {
        try{
            ConectaBD c=new ConectaBD(1);
            ResultSet resultadoProductos;
            ResultSetMetaData datosConsulta;
            String consulta="SELECT * FROM `ventas` ORDER BY `idVenta` DESC LIMIT 1";
            Statement sentencia=c.conexion.createStatement();
            resultadoProductos=sentencia.executeQuery(consulta);
            
            datosConsulta=resultadoProductos.getMetaData();
            String[] filasConsulta=new String[datosConsulta.getColumnCount()];
            valoresTabla=(DefaultTableModel) tabla_recetas.getModel();
            folioVenta=0;
            idVenta=0;
            while(resultadoProductos.next()){
                idVenta=Integer.parseInt(resultadoProductos.getString(1));
                folioVenta=Integer.parseInt(resultadoProductos.getString(2));
                txt_fecha.setText(resultadoProductos.getString(3));
                //filasConsulta[2]=resultadoProductos.getString(3);

               valoresTabla.addRow(filasConsulta);
            }
            tabla_recetas.setModel(valoresTabla);
        }catch(Exception ex){
            System.out.println("No consulta productos: "+ ex.getMessage());
            ex.printStackTrace();
        }
    }
}
