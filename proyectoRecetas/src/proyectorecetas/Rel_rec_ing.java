/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectorecetas;

import java.awt.Button;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SeijiPons
 */
public class Rel_rec_ing extends javax.swing.JFrame {

    int idRec,porc;
    DefaultTableModel valoresTabla;
    DefaultTableModel valoresReceta;
    
    
    /**
     * Creates new form Rel_rec_ing
     */
    
    
    
    
    public Rel_rec_ing(String receta, int idReceta,int porcion ) {
        idRec=idReceta;
        porc=porcion;
        initComponents();
        System.out.println("ID: "+idReceta);
        
        panelIzq.setBorder(BorderFactory.createTitledBorder(BorderFactory.createMatteBorder(2, 2, 2, 12, Color.lightGray),"Ingredientes Disponibles: ",TitledBorder.LEFT,TitledBorder.TOP));
        
        panelDer.setBorder(BorderFactory.createTitledBorder(BorderFactory.createMatteBorder(2, 2, 2, 2, Color.lightGray),"Ingredientes Agregados a: " + receta+" para "+porcion+" personas.",TitledBorder.LEFT,TitledBorder.TOP));
        
        consultaIngredientes();
        listaIngredientes();
        operacionPrecioTotal();
        operacionPorcion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelIzq = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_ingredientes = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_cantidad = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        combo_unidad = new javax.swing.JComboBox();
        panelDer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_ingr_in = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        txt_precTtl = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_prec_por = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 2));

        tabla_ingredientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ingediente", "Unidad", "Precio p/unidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_ingredientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_ingredientesMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tabla_ingredientesMouseExited(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_ingredientes);

        jButton1.setText("Agregar Ingrediente");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Modificar Ingrediente");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Nuevo ingrediente");

        jLabel1.setText("Cantidad");

        jLabel3.setText("Unidades");

        combo_unidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "gr", "ml", "pza", "kg", "lt" }));

        javax.swing.GroupLayout panelIzqLayout = new javax.swing.GroupLayout(panelIzq);
        panelIzq.setLayout(panelIzqLayout);
        panelIzqLayout.setHorizontalGroup(
            panelIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelIzqLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(panelIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelIzqLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(177, 177, 177)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(panelIzqLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(combo_unidad, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        panelIzqLayout.setVerticalGroup(
            panelIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelIzqLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(combo_unidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        getContentPane().add(panelIzq);

        tabla_ingr_in.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Ingrediente", "Cantidad", "Precio subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_ingr_in.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_ingr_inMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_ingr_in);

        jButton4.setText("Borrar Ingrediente");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Guardar");

        jLabel2.setText("Precio Total");

        jLabel4.setText("Precio p/porcion");

        javax.swing.GroupLayout panelDerLayout = new javax.swing.GroupLayout(panelDer);
        panelDer.setLayout(panelDerLayout);
        panelDerLayout.setHorizontalGroup(
            panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelDerLayout.createSequentialGroup()
                        .addGroup(panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_precTtl, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(txt_prec_por))))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        panelDerLayout.setVerticalGroup(
            panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_precTtl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton4))
                .addGap(13, 13, 13)
                .addGroup(panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_prec_por, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getContentPane().add(panelDer);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
 
        
        //tomar la fila seleccionada
        int num=tabla_ingr_in.getSelectedRow();
        //convierte a string el contenido de la fila en la posicion seleccionada (que es num) de la columna 0
        String ing = tabla_ingr_in.getModel().getValueAt(num, 0).toString();
        int valIng = Integer.parseInt(ing);
        
        borrarIngrediente(idRec, valIng);
        if (tabla_ingr_in.getRowCount()>0){
            limpiarIngrRec();
        }
        listaIngredientes();
        operacionPrecioTotal();
        operacionPorcion();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
       //Limpiar tabla 
        if (tabla_ingr_in.getRowCount()>0){
            limpiarIngrRec();
        }
        //tomar la fila seleccionada
        int num=tabla_ingredientes.getSelectedRow();
        
        //convierte a string el contenido de la fila en la posicion seleccionada (que es num) de la columna 0
        String val = tabla_ingredientes.getModel().getValueAt(num, 0).toString();
        String unn="",uniIngr="";
        uniIngr=tabla_ingredientes.getModel().getValueAt(num, 2).toString();
        
        //convierte en entero el valor del contenido en la columna de índice de la fila seleccionada
        int valN=Integer.parseInt(val);
        
        double cantidad= Double.parseDouble(txt_cantidad.getText());
        
         int unidad;
        unidad=combo_unidad.getSelectedIndex();
       //switch para obtener el tipo de unidad seleccionado
        switch (unidad){
            case 1: unn="gr";
                break;
            case 2: unn="ml";
                break;
            case 3: unn="pza";
                break;
            case 4: unn="kg";
                break;    
            case 5: unn="lt";
                break;
            default: JOptionPane.showMessageDialog(rootPane, "Unidad Inválida. Seleccione otro valor en el Combo Box.", "Error.", WIDTH);
                    break;
        }
        
        //validar que las unidades sean compatibles
        System.out.println(unn+" - "+uniIngr);
        if(unn.compareToIgnoreCase("")==0){
        System.out.println("No se hace registro");
        }else if (unn.compareToIgnoreCase(uniIngr)==0){
            
        agregarIngrediente(idRec, valN, cantidad, unn);
        listaIngredientes();
        operacionPrecioTotal();
        operacionPorcion();
        
        
        }else if(unn.compareToIgnoreCase("gr")==0 && uniIngr.compareToIgnoreCase("kg")==0){
            System.out.println("entrando a caso 2: "+unn+" - "+ uniIngr );
            agregarIngrediente(idRec, valN, cantidad, unn);
        listaIngredientes();
        operacionPrecioTotal();
        operacionPorcion();
        }else if(unn.compareToIgnoreCase("ml")==0 && uniIngr.compareToIgnoreCase("lt")==0){
            agregarIngrediente(idRec, valN, cantidad, unn);
        listaIngredientes();
        operacionPrecioTotal();
        operacionPorcion();
        }else{
            JOptionPane.showMessageDialog(rootPane, "Unidad Inválida. Seleccione otro valor en el Combo Box.", "Error.", WIDTH);
             System.out.println("No se hace registro");
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void operacionPrecioTotal(){
        int rowCnt = tabla_ingr_in.getRowCount();
        double precTtl=0,prec=0;
        String val;
        for(int i=0;i<rowCnt;i++){
            val = tabla_ingr_in.getModel().getValueAt(i, 3).toString();
            prec= Double.parseDouble(val);
             System.out.println("precTtl= "+precTtl);
             System.out.println("prec= "+prec);
             System.out.println("");
            precTtl=precTtl+prec;
                       System.out.println("precTtl= "+precTtl);
            }
        val=""+precTtl;
        System.out.println("precTtl= "+precTtl);
        txt_precTtl.setText(val);
    }
    private void operacionPorcion(){
        String precTtl = txt_precTtl.getText();
        double precTtlNum= Double.parseDouble(precTtl);
        double precPorc=precTtlNum/porc;
        txt_prec_por.setText(precPorc+"");
        
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tabla_ingredientesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_ingredientesMouseExited
jButton1.setEnabled(true);
jButton2.setEnabled(true);
    }//GEN-LAST:event_tabla_ingredientesMouseExited

    private void tabla_ingr_inMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_ingr_inMouseClicked
jButton4.setEnabled(true);
    }//GEN-LAST:event_tabla_ingr_inMouseClicked

    private void tabla_ingredientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_ingredientesMouseClicked

        jButton1.setEnabled(true);
    }//GEN-LAST:event_tabla_ingredientesMouseClicked


    public double operacionPrecio(String uni1, String uni2, double precio, double peso){
        double precio2=0;
        if(uni1.compareToIgnoreCase("kg")==0 && uni2.compareToIgnoreCase("gr")==0){
            precio2=(precio/1000)*peso;
        }else 
            if(uni1.compareToIgnoreCase("lt")==0 && uni2.compareToIgnoreCase("ml")==0){
            precio2=(precio/1000)*peso; 
        }else 
            if(uni1.compareToIgnoreCase("kg")==0 && uni2.compareToIgnoreCase("kg")==0){
            precio2=(precio)*peso; 
        }else 
            if(uni1.compareToIgnoreCase("lt")==0 && uni2.compareToIgnoreCase("lt")==0){
            precio2=(precio)*peso;   
        }else 
            if(uni1.compareToIgnoreCase("pza")==0 && uni2.compareToIgnoreCase("pza")==0){
            precio2=(precio)*peso;    
        }else{
            JOptionPane.showMessageDialog(rootPane, "Unidad Inválida. Seleccione otro valor en el Combo Box.", "Error.", WIDTH);
            precio2=0;
            }
        
        return precio2;
    }
        public void listaIngredientes( ){
        
        try{
            ConectaBD c=new ConectaBD(1);
            
            //conecta a bd2
            ConectaBD c2=new ConectaBD(2);
            
            ResultSet resultadoProductos,resultadoNombres;
                        
            ResultSetMetaData datosConsulta,datosConsulta2;
            
            
            String consulta="SELECT id_ingrediente, cantidad, unidad "
                    +" FROM rel_rec_ingr "
                    +" WHERE "
                    +"id_receta='"+idRec+"';";
            
            
            Statement sentencia=c.conexion.createStatement();
            //statement a bd2
            Statement sentencia2;
            sentencia2=c2.conexion.createStatement();
            
            resultadoProductos=sentencia.executeQuery(consulta);
            datosConsulta=resultadoProductos.getMetaData();
            
            String[] filasConsulta=new String[datosConsulta.getColumnCount()+1];
            
            
            valoresReceta=(DefaultTableModel)tabla_ingr_in.getModel();
            
            
            double precio,num=0,peso=0;
                       
            
            while(resultadoProductos.next()){
              
                    filasConsulta[0]=resultadoProductos.getString(1);
                    
                    //compara el id obtenido de la bd1 con el de bd2
                    String consultaAnidada="Select ingrediente, unidad, precio FROM ingredientes Where id_ingrediente="+filasConsulta[0]+" ;";
                    
                    resultadoNombres=sentencia2.executeQuery(consultaAnidada);
                    datosConsulta2=resultadoNombres.getMetaData();
                    
                    //segundo while
                    while(resultadoNombres.next()){
                    
                    filasConsulta[1]=resultadoNombres.getString(1);
                    precio= Double.parseDouble(resultadoNombres.getString(3));
                    peso=Double.parseDouble(resultadoProductos.getString(2));
                    num=operacionPrecio(resultadoNombres.getString(2),resultadoProductos.getString(3),precio,peso);
                    }//fin segundo while
                    
                    filasConsulta[2]=peso+resultadoProductos.getString(3);
                    filasConsulta[3]=""+num;
            
                  
                   valoresReceta.addRow(filasConsulta);
            }
            tabla_ingr_in.setModel(valoresReceta);
            
        }catch(Exception ex){
            System.out.println("No consulta ingredientes: "+ ex.getMessage());
            ex.printStackTrace();
            
            
        }
    }
     public void agregarIngrediente(int idReceta, int idIngrediente, double cantidad, String unidad){
        
        System.out.println("running");
        //running
        try{
            ConectaBD c = new ConectaBD(1);
            int nueVenta;
            String consulta="INSERT INTO rel_rec_ingr (id_receta, id_ingrediente, cantidad, unidad) VALUES ('"+idReceta+"', '"+idIngrediente+"', "+cantidad+", '"+unidad+"');";
            System.out.println(consulta);
            
            Statement sentencia=c.conexion.createStatement();
            nueVenta=sentencia.executeUpdate(consulta);
            System.out.println("Registrando nueva incorporación.");
            System.out.println(consulta);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(rootPane, "Unidad Inválida. Seleccione otro valor, posiblemente dato duplicado. No se registró.", "Error.", WIDTH);
            ex.printStackTrace();
        }
        
    }
      public void borrarIngrediente(int idReceta, int idIngrediente){
        
        try{
            ConectaBD c=new ConectaBD(1);
            int resultadoProductos;
            ResultSetMetaData datosConsulta;
            String consulta="DELETE  FROM `rel_rec_ingr` WHERE id_receta="+idReceta +" and id_ingrediente="+idIngrediente+";";
            
            Statement sentencia=c.conexion.createStatement();
            resultadoProductos=sentencia.executeUpdate(consulta);
            
            
          listaIngredientes();
            
        }catch(Exception ex){
            System.out.println("No consulta productos: "+ ex.getMessage());
            ex.printStackTrace();
            
            
        }
        
    }

         public void limpiarIngrRec(){
        for(int i=valoresReceta.getRowCount()-1;i>=0;i--){
            valoresReceta.removeRow(i);
            
        }
        
        tabla_ingr_in.setModel(valoresReceta);
        
    }
    private void consultaIngredientes(){
        try{
            ConectaBD c=new ConectaBD(2);
            ResultSet resultadoProductos;
            ResultSetMetaData datosConsulta;
            String consulta="SELECT id_ingrediente, ingrediente, "
                    +"precio, unidad, status FROM ingredientes";
            Statement sentencia=c.conexion.createStatement();
            resultadoProductos=sentencia.executeQuery(consulta);
            
            
            
            datosConsulta=resultadoProductos.getMetaData();
            String[] filasConsulta=new String[datosConsulta.getColumnCount()];
            valoresTabla=(DefaultTableModel)tabla_ingredientes.getModel();
            
            int a,num;
                       
            
            while(resultadoProductos.next()){
               /* for (int i=0;i<filasConsulta.length;i++)
                {
                    filasConsulta[i]=resultadoProductos.getString(i+1);
                    
                }*/
                   
                    filasConsulta[0]=resultadoProductos.getString(1);
                    filasConsulta[1]=resultadoProductos.getString(2);
                    filasConsulta[2]=resultadoProductos.getString(4);
                    filasConsulta[3]=resultadoProductos.getString(3);
                    
                  
                   valoresTabla.addRow(filasConsulta);
            }
            tabla_ingredientes.setModel(valoresTabla);
            
        }catch(Exception ex){
            System.out.println("No consulta productos: "+ ex.getMessage());
            ex.printStackTrace();
            
            
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rel_rec_ing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rel_rec_ing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rel_rec_ing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rel_rec_ing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rel_rec_ing("receta X",1,4).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox combo_unidad;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelDer;
    private javax.swing.JPanel panelIzq;
    private javax.swing.JTable tabla_ingr_in;
    private javax.swing.JTable tabla_ingredientes;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_precTtl;
    private javax.swing.JTextField txt_prec_por;
    // End of variables declaration//GEN-END:variables
}
